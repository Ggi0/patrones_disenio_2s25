/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import java.awt.BorderLayout;
import java.util.Arrays;
import java.util.List;
import mapa.Grafo;
import mapa.Mapa;
import mapa.MapaPanel;
import mapa.Nodo;

import Strategy.*;

/**
 *
 * @author gio
 */
public class Ventana_mapa extends javax.swing.JFrame {
    
    // Atributos
    private Grafo grafo;
    private MapaPanel mapaPanel;

    /**
     * Creates new form Ventana_mapa
     */
    public Ventana_mapa() {
        initComponents();
        inicializarMapa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_origen = new javax.swing.JTextField();
        txt_destino = new javax.swing.JTextField();
        btt_ruta = new javax.swing.JButton();
        rdBtt_auto = new javax.swing.JRadioButton();
        rdBtt_bicicleta = new javax.swing.JRadioButton();
        rdBtt_caminar = new javax.swing.JRadioButton();
        jPanel_mapa = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 3, 48)); // NOI18N
        jLabel2.setText("Patrón Strategy");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel3.setText("Origen:");

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("Destino:");

        txt_origen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_origenActionPerformed(evt);
            }
        });

        txt_destino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_destinoActionPerformed(evt);
            }
        });

        btt_ruta.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btt_ruta.setText("vamos!");
        btt_ruta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_rutaActionPerformed(evt);
            }
        });

        rdBtt_auto.setText("En automóvil");

        rdBtt_bicicleta.setText("En bicicleta");
        rdBtt_bicicleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtt_bicicletaActionPerformed(evt);
            }
        });

        rdBtt_caminar.setText("Caminar");

        jPanel_mapa.setBackground(new java.awt.Color(255, 204, 204));
        jPanel_mapa.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel_mapaLayout = new javax.swing.GroupLayout(jPanel_mapa);
        jPanel_mapa.setLayout(jPanel_mapaLayout);
        jPanel_mapaLayout.setHorizontalGroup(
            jPanel_mapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel_mapaLayout.setVerticalGroup(
            jPanel_mapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdBtt_bicicleta)
                                    .addComponent(rdBtt_auto)
                                    .addComponent(rdBtt_caminar)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txt_origen, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btt_ruta)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txt_destino, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel_mapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 559, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_origen, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_destino)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(btt_ruta)
                        .addGap(54, 54, 54)
                        .addComponent(rdBtt_auto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdBtt_bicicleta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdBtt_caminar)
                        .addGap(0, 349, Short.MAX_VALUE))
                    .addComponent(jPanel_mapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_destinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_destinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_destinoActionPerformed

    private void btt_rutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_rutaActionPerformed
       System.out.println("\n╔══════════════════════════════════════════════════════════╗");
    System.out.println("║   INICIANDO BÚSQUEDA DE RUTA - PATRÓN STRATEGY          ║");
    System.out.println("╚══════════════════════════════════════════════════════════╝\n");
    
    // PASO 1: RECOPILAR DATOS
    String origen = txt_origen.getText().trim().toUpperCase();
    String destino = txt_destino.getText().trim().toUpperCase();
    
    System.out.println("📍 Origen: " + origen);
    System.out.println("📍 Destino: " + destino);
    
    // VALIDACIÓN 1: Campos vacíos
    if (origen.isEmpty() || destino.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(
            this,
            "Por favor ingrese origen y destino",
            "Campos vacíos",
            javax.swing.JOptionPane.WARNING_MESSAGE
        );
        return;
    }
    
    // PASO 2: BUSCAR NODOS
    Nodo nodoOrigen = grafo.obtenerNodo(origen);
    Nodo nodoDestino = grafo.obtenerNodo(destino);
    
    // VALIDACIÓN 2: Nodos existen
    if (nodoOrigen == null) {
        javax.swing.JOptionPane.showMessageDialog(
            this,
            "El nodo '" + origen + "' no existe en el mapa.\n" +
            "Nodos disponibles: A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P",
            "Nodo no encontrado",
            javax.swing.JOptionPane.ERROR_MESSAGE
        );
        return;
    }
    
    if (nodoDestino == null) {
        javax.swing.JOptionPane.showMessageDialog(
            this,
            "El nodo '" + destino + "' no existe en el mapa.\n" +
            "Nodos disponibles: A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P",
            "Nodo no encontrado",
            javax.swing.JOptionPane.ERROR_MESSAGE
        );
        return;
    }
    
    System.out.println("✓ Nodos encontrados en el grafo");
    
    // PASO 3: CREAR CONTEXTO
    Strategy.CalculadorDeRutas calculador = new Strategy.CalculadorDeRutas();
    
    // PASO 4: SELECCIONAR ESTRATEGIA
    if (rdBtt_auto.isSelected()) {
        System.out.println("🚗 Usuario seleccionó: AUTOMÓVIL");
        calculador.setEstrategia(new Strategy.RutaEnCarro());
        
    } else if (rdBtt_bicicleta.isSelected()) {
        System.out.println("🚲 Usuario seleccionó: BICICLETA");
        calculador.setEstrategia(new Strategy.RutaEnBicicleta());
        
    } else if (rdBtt_caminar.isSelected()) {
        System.out.println("🚶 Usuario seleccionó: CAMINANDO");
        calculador.setEstrategia(new Strategy.RutaCaminando());
        
    } else {
        javax.swing.JOptionPane.showMessageDialog(
            this,
            "Por favor seleccione un medio de transporte",
            "Medio de transporte no seleccionado",
            javax.swing.JOptionPane.WARNING_MESSAGE
        );
        return;
    }
    
    // PASO 5: CALCULAR RUTA
    System.out.println("\n⏳ Calculando ruta...");
    
    mapa.CalculadorRutas.ResultadoRuta resultado = 
        calculador.calcularRutaOptima(grafo, nodoOrigen, nodoDestino);
    
    // PASO 6: MOSTRAR RESULTADOS
    if (resultado != null && resultado.existeRuta()) {
        
        System.out.println("\n✅ RUTA ENCONTRADA!");
        System.out.println(resultado.toString());
        
        // Resaltar en el mapa
        mapaPanel.setRutaResaltada(resultado.getCamino());
        
        // Construir texto del camino
        StringBuilder caminoTexto = new StringBuilder();
        List<Nodo> camino = resultado.getCamino();
        for (int i = 0; i < camino.size(); i++) {
            caminoTexto.append(camino.get(i).getNombre());
            if (i < camino.size() - 1) {
                caminoTexto.append(" → ");
            }
        }
        
        // Mensaje para el usuario
        String mensaje = String.format(
            "═══════ RUTA ENCONTRADA ═══════\n\n" +
            "🚩 Camino: %s\n\n" +
            "📏 Distancia: %.2f km\n\n" +
            "⏱️  Tiempo: %.1f minutos\n\n" +
            "🚦 Transporte: %s",
            caminoTexto.toString(),
            resultado.getDistanciaTotal(),
            resultado.getTiempoTotal(),
            resultado.getTipoTransporte()
        );
        
        javax.swing.JOptionPane.showMessageDialog(
            this,
            mensaje,
            "Ruta Óptima",
            javax.swing.JOptionPane.INFORMATION_MESSAGE
        );
        
    } else {
        
        System.out.println("\n❌ NO SE ENCONTRÓ RUTA");
        mapaPanel.limpiarRuta();
        
        String mensaje = String.format(
            "No existe ruta disponible entre %s y %s\n" +
            "con el transporte seleccionado.\n\n" +
            "💡 Intente con otro medio de transporte.",
            origen, destino
        );
        
        javax.swing.JOptionPane.showMessageDialog(
            this,
            mensaje,
            "Ruta no disponible",
            javax.swing.JOptionPane.WARNING_MESSAGE
        );
    }
    
    System.out.println("\n╔══════════════════════════════════════════════════════════╗");
    System.out.println("║   BÚSQUEDA FINALIZADA                                    ║");
    System.out.println("╚══════════════════════════════════════════════════════════╝\n");

        
        
    }//GEN-LAST:event_btt_rutaActionPerformed

    private void rdBtt_bicicletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtt_bicicletaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdBtt_bicicletaActionPerformed

    private void txt_origenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_origenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_origenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_mapa().setVisible(true);
            }
        });
    }

    
     /**
     * Inicializa el mapa y lo agrega al panel
     */
    private void inicializarMapa() {
        // 1. Crear el grafo con el mapa
        grafo = Mapa.crearMapaDefault();
        
        // 2. Crear el panel de visualización
        mapaPanel = new MapaPanel(grafo);
        
        // 3. Configurar el panel
        jPanel_mapa.setLayout(new BorderLayout());
        jPanel_mapa.add(mapaPanel, BorderLayout.CENTER);
        
        
        // 4. Refrescar la interfaz
        jPanel_mapa.revalidate();
        jPanel_mapa.repaint();
        
        System.out.println("Mapa inicializado correctamente");
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btt_ruta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_mapa;
    private javax.swing.JRadioButton rdBtt_auto;
    private javax.swing.JRadioButton rdBtt_bicicleta;
    private javax.swing.JRadioButton rdBtt_caminar;
    private javax.swing.JTextField txt_destino;
    private javax.swing.JTextField txt_origen;
    // End of variables declaration//GEN-END:variables
}
